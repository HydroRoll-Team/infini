{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Psi CLI \u8bed\u8a00","text":"<p>Psi is a new programming language designed with simplicity, flexibility, and performance in mind. It provides a clean and intuitive syntax that is easy to read and write, making it an excellent choice for both beginners and experienced programmers.</p>"},{"location":"#features","title":"Features","text":"<ul> <li> <p><code>Lexer Module</code>_: The lexer module is responsible for converting the source code into a sequence of tokens. It recognizes the basic elements of the language such as identifiers, keywords, operators, and literals. <code>['OPERATOR', 'IDENTIFIER', 'SEPARATOR', 'SEPARATOR', 'CONTROL', 'IDENTIFIER', 'OPERATOR', 'INTEGER', 'SEPARATOR', 'IDENTIFIER', 'SEPARATOR', 'IDENTIFIER', 'OPERATOR', 'IDENTIFIER', 'SEPARATOR', 'IDENTIFIER', 'SEPARATOR', 'EOF']</code></p> </li> <li> <p><code>Parser Module</code>_: The parser module takes the sequence of tokens generated by the lexer module and transforms it into an Abstract Syntax Tree (AST). The AST is a tree-like data structure that represents the source code in a way that is closer to the syntactic structure of the programming language.</p> </li> <li> <p><code>Built-in Types Module</code>_: This module defines the built-in types of the Psi language, such as lists and dictionaries. It provides functions for creating and manipulating instances of these types.</p> </li> <li> <p><code>Error Handling Module</code>_: This module provides a mechanism for catching and handling errors during runtime. It defines a set of exception classes and functions for throwing and catching these exceptions.</p> </li> <li> <p><code>Execution Environment Module</code>_: This module defines the execution environment of the Psi language, including the scope and lifecycle of variables. It provides functions for defining and looking up variables in the execution environment.</p> </li> <li> <p><code>Interpreter Module</code>_: The main task of this module is to traverse the AST and perform the corresponding operations in the execution environment.</p> </li> <li> <p><code>Mathematics Foundation Module</code>_: This module provides basic mathematical functions and constants, such as addition, subtraction, multiplication, and division.</p> </li> <li> <p><code>Documentation Module</code>_: This module uses reStructuredText and Sphinx to build the documentation, providing API interface descriptions and usage examples.</p> </li> </ul>"},{"location":"#getting-started","title":"Getting Started","text":"<p>To get started with Psi, you can clone the repository and follow the instructions in the README file. The repository includes a comprehensive set of examples that demonstrate the various features of the language.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions to the Psi project are welcome. If you have a feature request, bug report, or proposal for improvement, please open an issue on the project's GitHub page. If you wish to contribute code, please fork the repository and submit a pull request.</p> <p>How to build docs</p> <pre><code>git clone https://github.com/HydroRoll-Team/psi.git\ncd psi/psi/docs\nsphinx-build -b html . _build/html\n</code></pre>"},{"location":"#license","title":"License","text":"<p>Psi is open-source software, licensed under the MIT license. This means you are free to use, modify, and distribute it under the terms of this license.</p> <p>Last modified on: 2023-07-25 12:37:11</p>\u7b80"},{"location":"blog/","title":"Index","text":"<p>Last modified on: 2023-07-25 12:37:11</p>\u7b80"},{"location":"changelog/","title":"Index","text":"<p>Launch</p> 2022-Q1<p>First implementation.</p> :fontawesome-rocket: <p>One</p> 2022-Q2<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p> :octicons-sun-16: <p>Two</p> 2022-Q3<p>Lorem ipsum dolor sit amet.</p> :material-github: <p>Three</p> 2022-Q4<p>Lorem ipsum dolor sit amet.</p> <p>Last modified on: 2023-07-25 12:37:11</p>\u7b80"}]}